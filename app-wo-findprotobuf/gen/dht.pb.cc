// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dht.proto

#include "dht.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_base_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BaseMsg;
}  // namespace protobuf_base_2eproto
class CDhtConfigReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDhtConfigReq>
      _instance;
} _CDhtConfigReq_default_instance_;
class CDhtConfigCnfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CDhtConfigCnf>
      _instance;
} _CDhtConfigCnf_default_instance_;
namespace protobuf_dht_2eproto {
static void InitDefaultsCDhtConfigReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDhtConfigReq_default_instance_;
    new (ptr) ::CDhtConfigReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDhtConfigReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CDhtConfigReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCDhtConfigReq}, {
      &protobuf_base_2eproto::scc_info_BaseMsg.base,}};

static void InitDefaultsCDhtConfigCnf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CDhtConfigCnf_default_instance_;
    new (ptr) ::CDhtConfigCnf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CDhtConfigCnf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CDhtConfigCnf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCDhtConfigCnf}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CDhtConfigReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CDhtConfigCnf.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDhtConfigReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDhtConfigReq, baseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDhtConfigReq, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDhtConfigCnf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDhtConfigCnf, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CDhtConfigCnf, state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CDhtConfigReq)},
  { 7, -1, sizeof(::CDhtConfigCnf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDhtConfigReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CDhtConfigCnf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "dht.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tdht.proto\032\nbase.proto\"E\n\rCDhtConfigReq"
      "\022\035\n\006baseId\030\001 \001(\0132\r.Base.BaseMsg\022\025\n\005state"
      "\030\002 \001(\0162\006.OnOff\"\?\n\rCDhtConfigCnf\022\027\n\006resul"
      "t\030\001 \001(\0162\007.Result\022\025\n\005state\030\002 \001(\0162\006.OnOff*"
      "=\n\005OnOff\022\013\n\007INVALID\020\000\022\006\n\002ON\020\001\022\007\n\003OFF\020\002\022\026"
      "\n\022ON_BUT_NOT_WORKING\020\003* \n\006Result\022\013\n\007SUCC"
      "ESS\020\000\022\t\n\005ERROR\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dht.proto", &protobuf_RegisterTypes);
  ::protobuf_base_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dht_2eproto
const ::google::protobuf::EnumDescriptor* OnOff_descriptor() {
  protobuf_dht_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dht_2eproto::file_level_enum_descriptors[0];
}
bool OnOff_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Result_descriptor() {
  protobuf_dht_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dht_2eproto::file_level_enum_descriptors[1];
}
bool Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CDhtConfigReq::InitAsDefaultInstance() {
  ::_CDhtConfigReq_default_instance_._instance.get_mutable()->baseid_ = const_cast< ::Base::BaseMsg*>(
      ::Base::BaseMsg::internal_default_instance());
}
void CDhtConfigReq::clear_baseid() {
  if (GetArenaNoVirtual() == NULL && baseid_ != NULL) {
    delete baseid_;
  }
  baseid_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDhtConfigReq::kBaseIdFieldNumber;
const int CDhtConfigReq::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDhtConfigReq::CDhtConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dht_2eproto::scc_info_CDhtConfigReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDhtConfigReq)
}
CDhtConfigReq::CDhtConfigReq(const CDhtConfigReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseid()) {
    baseid_ = new ::Base::BaseMsg(*from.baseid_);
  } else {
    baseid_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:CDhtConfigReq)
}

void CDhtConfigReq::SharedCtor() {
  ::memset(&baseid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&baseid_)) + sizeof(state_));
}

CDhtConfigReq::~CDhtConfigReq() {
  // @@protoc_insertion_point(destructor:CDhtConfigReq)
  SharedDtor();
}

void CDhtConfigReq::SharedDtor() {
  if (this != internal_default_instance()) delete baseid_;
}

void CDhtConfigReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDhtConfigReq::descriptor() {
  ::protobuf_dht_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dht_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDhtConfigReq& CDhtConfigReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dht_2eproto::scc_info_CDhtConfigReq.base);
  return *internal_default_instance();
}


void CDhtConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CDhtConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && baseid_ != NULL) {
    delete baseid_;
  }
  baseid_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool CDhtConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDhtConfigReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Base.BaseMsg baseId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_baseid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OnOff state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::OnOff >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDhtConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDhtConfigReq)
  return false;
#undef DO_
}

void CDhtConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDhtConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Base.BaseMsg baseId = 1;
  if (this->has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_baseid(), output);
  }

  // .OnOff state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CDhtConfigReq)
}

::google::protobuf::uint8* CDhtConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDhtConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Base.BaseMsg baseId = 1;
  if (this->has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_baseid(), deterministic, target);
  }

  // .OnOff state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDhtConfigReq)
  return target;
}

size_t CDhtConfigReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDhtConfigReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Base.BaseMsg baseId = 1;
  if (this->has_baseid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *baseid_);
  }

  // .OnOff state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDhtConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDhtConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CDhtConfigReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDhtConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDhtConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDhtConfigReq)
    MergeFrom(*source);
  }
}

void CDhtConfigReq::MergeFrom(const CDhtConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDhtConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_baseid()) {
    mutable_baseid()->::Base::BaseMsg::MergeFrom(from.baseid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CDhtConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDhtConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDhtConfigReq::CopyFrom(const CDhtConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDhtConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDhtConfigReq::IsInitialized() const {
  return true;
}

void CDhtConfigReq::Swap(CDhtConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDhtConfigReq::InternalSwap(CDhtConfigReq* other) {
  using std::swap;
  swap(baseid_, other->baseid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDhtConfigReq::GetMetadata() const {
  protobuf_dht_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dht_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CDhtConfigCnf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDhtConfigCnf::kResultFieldNumber;
const int CDhtConfigCnf::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDhtConfigCnf::CDhtConfigCnf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_dht_2eproto::scc_info_CDhtConfigCnf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDhtConfigCnf)
}
CDhtConfigCnf::CDhtConfigCnf(const CDhtConfigCnf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&result_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:CDhtConfigCnf)
}

void CDhtConfigCnf::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&result_)) + sizeof(state_));
}

CDhtConfigCnf::~CDhtConfigCnf() {
  // @@protoc_insertion_point(destructor:CDhtConfigCnf)
  SharedDtor();
}

void CDhtConfigCnf::SharedDtor() {
}

void CDhtConfigCnf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CDhtConfigCnf::descriptor() {
  ::protobuf_dht_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dht_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDhtConfigCnf& CDhtConfigCnf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_dht_2eproto::scc_info_CDhtConfigCnf.base);
  return *internal_default_instance();
}


void CDhtConfigCnf::Clear() {
// @@protoc_insertion_point(message_clear_start:CDhtConfigCnf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&result_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool CDhtConfigCnf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDhtConfigCnf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Result result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::Result >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OnOff state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::OnOff >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDhtConfigCnf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDhtConfigCnf)
  return false;
#undef DO_
}

void CDhtConfigCnf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDhtConfigCnf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // .OnOff state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CDhtConfigCnf)
}

::google::protobuf::uint8* CDhtConfigCnf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDhtConfigCnf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // .OnOff state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CDhtConfigCnf)
  return target;
}

size_t CDhtConfigCnf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDhtConfigCnf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // .OnOff state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CDhtConfigCnf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDhtConfigCnf)
  GOOGLE_DCHECK_NE(&from, this);
  const CDhtConfigCnf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDhtConfigCnf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDhtConfigCnf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDhtConfigCnf)
    MergeFrom(*source);
  }
}

void CDhtConfigCnf::MergeFrom(const CDhtConfigCnf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDhtConfigCnf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void CDhtConfigCnf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDhtConfigCnf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDhtConfigCnf::CopyFrom(const CDhtConfigCnf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDhtConfigCnf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDhtConfigCnf::IsInitialized() const {
  return true;
}

void CDhtConfigCnf::Swap(CDhtConfigCnf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDhtConfigCnf::InternalSwap(CDhtConfigCnf* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CDhtConfigCnf::GetMetadata() const {
  protobuf_dht_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dht_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDhtConfigReq* Arena::CreateMaybeMessage< ::CDhtConfigReq >(Arena* arena) {
  return Arena::CreateInternal< ::CDhtConfigReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CDhtConfigCnf* Arena::CreateMaybeMessage< ::CDhtConfigCnf >(Arena* arena) {
  return Arena::CreateInternal< ::CDhtConfigCnf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

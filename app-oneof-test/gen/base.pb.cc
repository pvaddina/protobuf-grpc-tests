// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

#include "base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_base_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CHeatingCtrl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CLightingCtrl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CShadesCtrl;
}  // namespace protobuf_base_2eproto
class CHeatingCtrlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CHeatingCtrl>
      _instance;
} _CHeatingCtrl_default_instance_;
class CLightingCtrlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CLightingCtrl>
      _instance;
} _CLightingCtrl_default_instance_;
class CShadesCtrlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CShadesCtrl>
      _instance;
} _CShadesCtrl_default_instance_;
class CHomeAutoParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CHomeAutoParams>
      _instance;
  const ::CHeatingCtrl* heating_;
  const ::CLightingCtrl* lighting_;
  const ::CShadesCtrl* shades_;
} _CHomeAutoParams_default_instance_;
namespace protobuf_base_2eproto {
static void InitDefaultsCHeatingCtrl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CHeatingCtrl_default_instance_;
    new (ptr) ::CHeatingCtrl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CHeatingCtrl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CHeatingCtrl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCHeatingCtrl}, {}};

static void InitDefaultsCLightingCtrl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CLightingCtrl_default_instance_;
    new (ptr) ::CLightingCtrl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CLightingCtrl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CLightingCtrl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCLightingCtrl}, {}};

static void InitDefaultsCShadesCtrl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CShadesCtrl_default_instance_;
    new (ptr) ::CShadesCtrl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CShadesCtrl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CShadesCtrl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCShadesCtrl}, {}};

static void InitDefaultsCHomeAutoParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CHomeAutoParams_default_instance_;
    new (ptr) ::CHomeAutoParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CHomeAutoParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CHomeAutoParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCHomeAutoParams}, {
      &protobuf_base_2eproto::scc_info_CHeatingCtrl.base,
      &protobuf_base_2eproto::scc_info_CLightingCtrl.base,
      &protobuf_base_2eproto::scc_info_CShadesCtrl.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CHeatingCtrl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CLightingCtrl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CShadesCtrl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CHomeAutoParams.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHeatingCtrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHeatingCtrl, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHeatingCtrl, currenttemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHeatingCtrl, desiredtemp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CLightingCtrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CLightingCtrl, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CLightingCtrl, livingroom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CLightingCtrl, bedroom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CLightingCtrl, kitchenroom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShadesCtrl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShadesCtrl, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CShadesCtrl, currentopenpercentage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHomeAutoParams, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHomeAutoParams, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHomeAutoParams, homeaddress_),
  offsetof(::CHomeAutoParamsDefaultTypeInternal, heating_),
  offsetof(::CHomeAutoParamsDefaultTypeInternal, lighting_),
  offsetof(::CHomeAutoParamsDefaultTypeInternal, shades_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CHomeAutoParams, action_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CHeatingCtrl)},
  { 8, -1, sizeof(::CLightingCtrl)},
  { 17, -1, sizeof(::CShadesCtrl)},
  { 24, -1, sizeof(::CHomeAutoParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CHeatingCtrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CLightingCtrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CShadesCtrl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CHomeAutoParams_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "base.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nbase.proto\"F\n\014CHeatingCtrl\022\014\n\004name\030\001 \001"
      "(\t\022\023\n\013currentTemp\030\002 \001(\001\022\023\n\013desiredTemp\030\003"
      " \001(\001\"\307\001\n\rCLightingCtrl\022\014\n\004name\030\001 \001(\t\022-\n\n"
      "livingRoom\030\002 \001(\0162\031.CLightingCtrl.LightOn"
      "Off\022*\n\007bedRoom\030\003 \001(\0162\031.CLightingCtrl.Lig"
      "htOnOff\022.\n\013kitchenRoom\030\004 \001(\0162\031.CLighting"
      "Ctrl.LightOnOff\"\035\n\nLightOnOff\022\007\n\003OFF\020\000\022\006"
      "\n\002ON\020\001\"s\n\013CShadesCtrl\022$\n\005state\030\001 \001(\0162\025.C"
      "ShadesCtrl.OpenUpto\022\035\n\025currentOpenPercen"
      "tage\030\002 \001(\005\"\037\n\010OpenUpto\022\t\n\005CLOSE\020\000\022\010\n\004OPE"
      "N\020\001\"\226\001\n\017CHomeAutoParams\022\023\n\013homeAddress\030\001"
      " \001(\t\022 \n\007heating\030\002 \001(\0132\r.CHeatingCtrlH\000\022\""
      "\n\010lighting\030\003 \001(\0132\016.CLightingCtrlH\000\022\036\n\006sh"
      "ades\030\004 \001(\0132\014.CShadesCtrlH\000B\010\n\006actionb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 564);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_base_2eproto
const ::google::protobuf::EnumDescriptor* CLightingCtrl_LightOnOff_descriptor() {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_2eproto::file_level_enum_descriptors[0];
}
bool CLightingCtrl_LightOnOff_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CLightingCtrl_LightOnOff CLightingCtrl::OFF;
const CLightingCtrl_LightOnOff CLightingCtrl::ON;
const CLightingCtrl_LightOnOff CLightingCtrl::LightOnOff_MIN;
const CLightingCtrl_LightOnOff CLightingCtrl::LightOnOff_MAX;
const int CLightingCtrl::LightOnOff_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CShadesCtrl_OpenUpto_descriptor() {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_base_2eproto::file_level_enum_descriptors[1];
}
bool CShadesCtrl_OpenUpto_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CShadesCtrl_OpenUpto CShadesCtrl::CLOSE;
const CShadesCtrl_OpenUpto CShadesCtrl::OPEN;
const CShadesCtrl_OpenUpto CShadesCtrl::OpenUpto_MIN;
const CShadesCtrl_OpenUpto CShadesCtrl::OpenUpto_MAX;
const int CShadesCtrl::OpenUpto_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CHeatingCtrl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CHeatingCtrl::kNameFieldNumber;
const int CHeatingCtrl::kCurrentTempFieldNumber;
const int CHeatingCtrl::kDesiredTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CHeatingCtrl::CHeatingCtrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_CHeatingCtrl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CHeatingCtrl)
}
CHeatingCtrl::CHeatingCtrl(const CHeatingCtrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&currenttemp_, &from.currenttemp_,
    static_cast<size_t>(reinterpret_cast<char*>(&desiredtemp_) -
    reinterpret_cast<char*>(&currenttemp_)) + sizeof(desiredtemp_));
  // @@protoc_insertion_point(copy_constructor:CHeatingCtrl)
}

void CHeatingCtrl::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&currenttemp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desiredtemp_) -
      reinterpret_cast<char*>(&currenttemp_)) + sizeof(desiredtemp_));
}

CHeatingCtrl::~CHeatingCtrl() {
  // @@protoc_insertion_point(destructor:CHeatingCtrl)
  SharedDtor();
}

void CHeatingCtrl::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CHeatingCtrl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CHeatingCtrl::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CHeatingCtrl& CHeatingCtrl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_CHeatingCtrl.base);
  return *internal_default_instance();
}


void CHeatingCtrl::Clear() {
// @@protoc_insertion_point(message_clear_start:CHeatingCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&currenttemp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&desiredtemp_) -
      reinterpret_cast<char*>(&currenttemp_)) + sizeof(desiredtemp_));
  _internal_metadata_.Clear();
}

bool CHeatingCtrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CHeatingCtrl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CHeatingCtrl.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double currentTemp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &currenttemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double desiredTemp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &desiredtemp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CHeatingCtrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CHeatingCtrl)
  return false;
#undef DO_
}

void CHeatingCtrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CHeatingCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CHeatingCtrl.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // double currentTemp = 2;
  if (this->currenttemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->currenttemp(), output);
  }

  // double desiredTemp = 3;
  if (this->desiredtemp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->desiredtemp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CHeatingCtrl)
}

::google::protobuf::uint8* CHeatingCtrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CHeatingCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CHeatingCtrl.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // double currentTemp = 2;
  if (this->currenttemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->currenttemp(), target);
  }

  // double desiredTemp = 3;
  if (this->desiredtemp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->desiredtemp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CHeatingCtrl)
  return target;
}

size_t CHeatingCtrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CHeatingCtrl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double currentTemp = 2;
  if (this->currenttemp() != 0) {
    total_size += 1 + 8;
  }

  // double desiredTemp = 3;
  if (this->desiredtemp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CHeatingCtrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CHeatingCtrl)
  GOOGLE_DCHECK_NE(&from, this);
  const CHeatingCtrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CHeatingCtrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CHeatingCtrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CHeatingCtrl)
    MergeFrom(*source);
  }
}

void CHeatingCtrl::MergeFrom(const CHeatingCtrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CHeatingCtrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.currenttemp() != 0) {
    set_currenttemp(from.currenttemp());
  }
  if (from.desiredtemp() != 0) {
    set_desiredtemp(from.desiredtemp());
  }
}

void CHeatingCtrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CHeatingCtrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CHeatingCtrl::CopyFrom(const CHeatingCtrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CHeatingCtrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CHeatingCtrl::IsInitialized() const {
  return true;
}

void CHeatingCtrl::Swap(CHeatingCtrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CHeatingCtrl::InternalSwap(CHeatingCtrl* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(currenttemp_, other->currenttemp_);
  swap(desiredtemp_, other->desiredtemp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CHeatingCtrl::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CLightingCtrl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLightingCtrl::kNameFieldNumber;
const int CLightingCtrl::kLivingRoomFieldNumber;
const int CLightingCtrl::kBedRoomFieldNumber;
const int CLightingCtrl::kKitchenRoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLightingCtrl::CLightingCtrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_CLightingCtrl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CLightingCtrl)
}
CLightingCtrl::CLightingCtrl(const CLightingCtrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&livingroom_, &from.livingroom_,
    static_cast<size_t>(reinterpret_cast<char*>(&kitchenroom_) -
    reinterpret_cast<char*>(&livingroom_)) + sizeof(kitchenroom_));
  // @@protoc_insertion_point(copy_constructor:CLightingCtrl)
}

void CLightingCtrl::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&livingroom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kitchenroom_) -
      reinterpret_cast<char*>(&livingroom_)) + sizeof(kitchenroom_));
}

CLightingCtrl::~CLightingCtrl() {
  // @@protoc_insertion_point(destructor:CLightingCtrl)
  SharedDtor();
}

void CLightingCtrl::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CLightingCtrl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CLightingCtrl::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CLightingCtrl& CLightingCtrl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_CLightingCtrl.base);
  return *internal_default_instance();
}


void CLightingCtrl::Clear() {
// @@protoc_insertion_point(message_clear_start:CLightingCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&livingroom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kitchenroom_) -
      reinterpret_cast<char*>(&livingroom_)) + sizeof(kitchenroom_));
  _internal_metadata_.Clear();
}

bool CLightingCtrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CLightingCtrl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CLightingCtrl.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CLightingCtrl.LightOnOff livingRoom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_livingroom(static_cast< ::CLightingCtrl_LightOnOff >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CLightingCtrl.LightOnOff bedRoom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bedroom(static_cast< ::CLightingCtrl_LightOnOff >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CLightingCtrl.LightOnOff kitchenRoom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kitchenroom(static_cast< ::CLightingCtrl_LightOnOff >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CLightingCtrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CLightingCtrl)
  return false;
#undef DO_
}

void CLightingCtrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CLightingCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CLightingCtrl.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .CLightingCtrl.LightOnOff livingRoom = 2;
  if (this->livingroom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->livingroom(), output);
  }

  // .CLightingCtrl.LightOnOff bedRoom = 3;
  if (this->bedroom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->bedroom(), output);
  }

  // .CLightingCtrl.LightOnOff kitchenRoom = 4;
  if (this->kitchenroom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->kitchenroom(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CLightingCtrl)
}

::google::protobuf::uint8* CLightingCtrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CLightingCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CLightingCtrl.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .CLightingCtrl.LightOnOff livingRoom = 2;
  if (this->livingroom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->livingroom(), target);
  }

  // .CLightingCtrl.LightOnOff bedRoom = 3;
  if (this->bedroom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->bedroom(), target);
  }

  // .CLightingCtrl.LightOnOff kitchenRoom = 4;
  if (this->kitchenroom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->kitchenroom(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CLightingCtrl)
  return target;
}

size_t CLightingCtrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CLightingCtrl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .CLightingCtrl.LightOnOff livingRoom = 2;
  if (this->livingroom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->livingroom());
  }

  // .CLightingCtrl.LightOnOff bedRoom = 3;
  if (this->bedroom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bedroom());
  }

  // .CLightingCtrl.LightOnOff kitchenRoom = 4;
  if (this->kitchenroom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kitchenroom());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CLightingCtrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CLightingCtrl)
  GOOGLE_DCHECK_NE(&from, this);
  const CLightingCtrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLightingCtrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CLightingCtrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CLightingCtrl)
    MergeFrom(*source);
  }
}

void CLightingCtrl::MergeFrom(const CLightingCtrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CLightingCtrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.livingroom() != 0) {
    set_livingroom(from.livingroom());
  }
  if (from.bedroom() != 0) {
    set_bedroom(from.bedroom());
  }
  if (from.kitchenroom() != 0) {
    set_kitchenroom(from.kitchenroom());
  }
}

void CLightingCtrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CLightingCtrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLightingCtrl::CopyFrom(const CLightingCtrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CLightingCtrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLightingCtrl::IsInitialized() const {
  return true;
}

void CLightingCtrl::Swap(CLightingCtrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLightingCtrl::InternalSwap(CLightingCtrl* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(livingroom_, other->livingroom_);
  swap(bedroom_, other->bedroom_);
  swap(kitchenroom_, other->kitchenroom_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CLightingCtrl::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CShadesCtrl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CShadesCtrl::kStateFieldNumber;
const int CShadesCtrl::kCurrentOpenPercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CShadesCtrl::CShadesCtrl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_CShadesCtrl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CShadesCtrl)
}
CShadesCtrl::CShadesCtrl(const CShadesCtrl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&currentopenpercentage_) -
    reinterpret_cast<char*>(&state_)) + sizeof(currentopenpercentage_));
  // @@protoc_insertion_point(copy_constructor:CShadesCtrl)
}

void CShadesCtrl::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currentopenpercentage_) -
      reinterpret_cast<char*>(&state_)) + sizeof(currentopenpercentage_));
}

CShadesCtrl::~CShadesCtrl() {
  // @@protoc_insertion_point(destructor:CShadesCtrl)
  SharedDtor();
}

void CShadesCtrl::SharedDtor() {
}

void CShadesCtrl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CShadesCtrl::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CShadesCtrl& CShadesCtrl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_CShadesCtrl.base);
  return *internal_default_instance();
}


void CShadesCtrl::Clear() {
// @@protoc_insertion_point(message_clear_start:CShadesCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currentopenpercentage_) -
      reinterpret_cast<char*>(&state_)) + sizeof(currentopenpercentage_));
  _internal_metadata_.Clear();
}

bool CShadesCtrl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CShadesCtrl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CShadesCtrl.OpenUpto state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::CShadesCtrl_OpenUpto >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 currentOpenPercentage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentopenpercentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CShadesCtrl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CShadesCtrl)
  return false;
#undef DO_
}

void CShadesCtrl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CShadesCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CShadesCtrl.OpenUpto state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // int32 currentOpenPercentage = 2;
  if (this->currentopenpercentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->currentopenpercentage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CShadesCtrl)
}

::google::protobuf::uint8* CShadesCtrl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CShadesCtrl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CShadesCtrl.OpenUpto state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // int32 currentOpenPercentage = 2;
  if (this->currentopenpercentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->currentopenpercentage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShadesCtrl)
  return target;
}

size_t CShadesCtrl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShadesCtrl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CShadesCtrl.OpenUpto state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 currentOpenPercentage = 2;
  if (this->currentopenpercentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currentopenpercentage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShadesCtrl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShadesCtrl)
  GOOGLE_DCHECK_NE(&from, this);
  const CShadesCtrl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CShadesCtrl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShadesCtrl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShadesCtrl)
    MergeFrom(*source);
  }
}

void CShadesCtrl::MergeFrom(const CShadesCtrl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShadesCtrl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.currentopenpercentage() != 0) {
    set_currentopenpercentage(from.currentopenpercentage());
  }
}

void CShadesCtrl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShadesCtrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShadesCtrl::CopyFrom(const CShadesCtrl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShadesCtrl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShadesCtrl::IsInitialized() const {
  return true;
}

void CShadesCtrl::Swap(CShadesCtrl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CShadesCtrl::InternalSwap(CShadesCtrl* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(currentopenpercentage_, other->currentopenpercentage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CShadesCtrl::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CHomeAutoParams::InitAsDefaultInstance() {
  ::_CHomeAutoParams_default_instance_.heating_ = const_cast< ::CHeatingCtrl*>(
      ::CHeatingCtrl::internal_default_instance());
  ::_CHomeAutoParams_default_instance_.lighting_ = const_cast< ::CLightingCtrl*>(
      ::CLightingCtrl::internal_default_instance());
  ::_CHomeAutoParams_default_instance_.shades_ = const_cast< ::CShadesCtrl*>(
      ::CShadesCtrl::internal_default_instance());
}
void CHomeAutoParams::set_allocated_heating(::CHeatingCtrl* heating) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (heating) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      heating = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heating, submessage_arena);
    }
    set_has_heating();
    action_.heating_ = heating;
  }
  // @@protoc_insertion_point(field_set_allocated:CHomeAutoParams.heating)
}
void CHomeAutoParams::set_allocated_lighting(::CLightingCtrl* lighting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (lighting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lighting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lighting, submessage_arena);
    }
    set_has_lighting();
    action_.lighting_ = lighting;
  }
  // @@protoc_insertion_point(field_set_allocated:CHomeAutoParams.lighting)
}
void CHomeAutoParams::set_allocated_shades(::CShadesCtrl* shades) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_action();
  if (shades) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      shades = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shades, submessage_arena);
    }
    set_has_shades();
    action_.shades_ = shades;
  }
  // @@protoc_insertion_point(field_set_allocated:CHomeAutoParams.shades)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CHomeAutoParams::kHomeAddressFieldNumber;
const int CHomeAutoParams::kHeatingFieldNumber;
const int CHomeAutoParams::kLightingFieldNumber;
const int CHomeAutoParams::kShadesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CHomeAutoParams::CHomeAutoParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_base_2eproto::scc_info_CHomeAutoParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CHomeAutoParams)
}
CHomeAutoParams::CHomeAutoParams(const CHomeAutoParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  homeaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.homeaddress().size() > 0) {
    homeaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homeaddress_);
  }
  clear_has_action();
  switch (from.action_case()) {
    case kHeating: {
      mutable_heating()->::CHeatingCtrl::MergeFrom(from.heating());
      break;
    }
    case kLighting: {
      mutable_lighting()->::CLightingCtrl::MergeFrom(from.lighting());
      break;
    }
    case kShades: {
      mutable_shades()->::CShadesCtrl::MergeFrom(from.shades());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CHomeAutoParams)
}

void CHomeAutoParams::SharedCtor() {
  homeaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action();
}

CHomeAutoParams::~CHomeAutoParams() {
  // @@protoc_insertion_point(destructor:CHomeAutoParams)
  SharedDtor();
}

void CHomeAutoParams::SharedDtor() {
  homeaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_action()) {
    clear_action();
  }
}

void CHomeAutoParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CHomeAutoParams::descriptor() {
  ::protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CHomeAutoParams& CHomeAutoParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_base_2eproto::scc_info_CHomeAutoParams.base);
  return *internal_default_instance();
}


void CHomeAutoParams::clear_action() {
// @@protoc_insertion_point(one_of_clear_start:CHomeAutoParams)
  switch (action_case()) {
    case kHeating: {
      delete action_.heating_;
      break;
    }
    case kLighting: {
      delete action_.lighting_;
      break;
    }
    case kShades: {
      delete action_.shades_;
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ACTION_NOT_SET;
}


void CHomeAutoParams::Clear() {
// @@protoc_insertion_point(message_clear_start:CHomeAutoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  homeaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_action();
  _internal_metadata_.Clear();
}

bool CHomeAutoParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CHomeAutoParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string homeAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_homeaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->homeaddress().data(), static_cast<int>(this->homeaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CHomeAutoParams.homeAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CHeatingCtrl heating = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_heating()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CLightingCtrl lighting = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lighting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .CShadesCtrl shades = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shades()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CHomeAutoParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CHomeAutoParams)
  return false;
#undef DO_
}

void CHomeAutoParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CHomeAutoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string homeAddress = 1;
  if (this->homeaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->homeaddress().data(), static_cast<int>(this->homeaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CHomeAutoParams.homeAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->homeaddress(), output);
  }

  // .CHeatingCtrl heating = 2;
  if (has_heating()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_heating(), output);
  }

  // .CLightingCtrl lighting = 3;
  if (has_lighting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_lighting(), output);
  }

  // .CShadesCtrl shades = 4;
  if (has_shades()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_shades(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CHomeAutoParams)
}

::google::protobuf::uint8* CHomeAutoParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CHomeAutoParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string homeAddress = 1;
  if (this->homeaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->homeaddress().data(), static_cast<int>(this->homeaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CHomeAutoParams.homeAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->homeaddress(), target);
  }

  // .CHeatingCtrl heating = 2;
  if (has_heating()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_heating(), deterministic, target);
  }

  // .CLightingCtrl lighting = 3;
  if (has_lighting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_lighting(), deterministic, target);
  }

  // .CShadesCtrl shades = 4;
  if (has_shades()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_shades(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CHomeAutoParams)
  return target;
}

size_t CHomeAutoParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CHomeAutoParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string homeAddress = 1;
  if (this->homeaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->homeaddress());
  }

  switch (action_case()) {
    // .CHeatingCtrl heating = 2;
    case kHeating: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *action_.heating_);
      break;
    }
    // .CLightingCtrl lighting = 3;
    case kLighting: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *action_.lighting_);
      break;
    }
    // .CShadesCtrl shades = 4;
    case kShades: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *action_.shades_);
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CHomeAutoParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CHomeAutoParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CHomeAutoParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CHomeAutoParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CHomeAutoParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CHomeAutoParams)
    MergeFrom(*source);
  }
}

void CHomeAutoParams::MergeFrom(const CHomeAutoParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CHomeAutoParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.homeaddress().size() > 0) {

    homeaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homeaddress_);
  }
  switch (from.action_case()) {
    case kHeating: {
      mutable_heating()->::CHeatingCtrl::MergeFrom(from.heating());
      break;
    }
    case kLighting: {
      mutable_lighting()->::CLightingCtrl::MergeFrom(from.lighting());
      break;
    }
    case kShades: {
      mutable_shades()->::CShadesCtrl::MergeFrom(from.shades());
      break;
    }
    case ACTION_NOT_SET: {
      break;
    }
  }
}

void CHomeAutoParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CHomeAutoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CHomeAutoParams::CopyFrom(const CHomeAutoParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CHomeAutoParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CHomeAutoParams::IsInitialized() const {
  return true;
}

void CHomeAutoParams::Swap(CHomeAutoParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CHomeAutoParams::InternalSwap(CHomeAutoParams* other) {
  using std::swap;
  homeaddress_.Swap(&other->homeaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CHomeAutoParams::GetMetadata() const {
  protobuf_base_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_base_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CHeatingCtrl* Arena::CreateMaybeMessage< ::CHeatingCtrl >(Arena* arena) {
  return Arena::CreateInternal< ::CHeatingCtrl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CLightingCtrl* Arena::CreateMaybeMessage< ::CLightingCtrl >(Arena* arena) {
  return Arena::CreateInternal< ::CLightingCtrl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CShadesCtrl* Arena::CreateMaybeMessage< ::CShadesCtrl >(Arena* arena) {
  return Arena::CreateInternal< ::CShadesCtrl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CHomeAutoParams* Arena::CreateMaybeMessage< ::CHomeAutoParams >(Arena* arena) {
  return Arena::CreateInternal< ::CHomeAutoParams >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#include "msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class DefsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Defs>
      _instance;
} _Defs_default_instance_;
class CSensorInitReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSensorInitReq>
      _instance;
} _CSensorInitReq_default_instance_;
namespace protobuf_msg_2eproto {
static void InitDefaultsDefs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Defs_default_instance_;
    new (ptr) ::Defs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Defs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Defs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDefs}, {}};

static void InitDefaultsCSensorInitReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CSensorInitReq_default_instance_;
    new (ptr) ::CSensorInitReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CSensorInitReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSensorInitReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSensorInitReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Defs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSensorInitReq.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Defs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSensorInitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSensorInitReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSensorInitReq, power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CSensorInitReq, meastype_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Defs)},
  { 5, -1, sizeof(::CSensorInitReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Defs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CSensorInitReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmsg.proto\"{\n\004Defs\"*\n\nPowerState\022\013\n\007INV"
      "ALID\020\000\022\007\n\003OFF\020\001\022\006\n\002ON\020\002\"G\n\010MeasType\022\017\n\013T"
      "EMPERATURE\020\000\022\014\n\010HUMIDITY\020\001\022\034\n\030TEMPERATUR"
      "E_AND_HUMIDITY\020\002\"a\n\016CSensorInitReq\022\014\n\004na"
      "me\030\001 \001(\t\022\037\n\005power\030\002 \001(\0162\020.Defs.PowerStat"
      "e\022 \n\010measType\030\003 \001(\0162\016.Defs.MeasTypeb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_2eproto
const ::google::protobuf::EnumDescriptor* Defs_PowerState_descriptor() {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_2eproto::file_level_enum_descriptors[0];
}
bool Defs_PowerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Defs_PowerState Defs::INVALID;
const Defs_PowerState Defs::OFF;
const Defs_PowerState Defs::ON;
const Defs_PowerState Defs::PowerState_MIN;
const Defs_PowerState Defs::PowerState_MAX;
const int Defs::PowerState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Defs_MeasType_descriptor() {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msg_2eproto::file_level_enum_descriptors[1];
}
bool Defs_MeasType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Defs_MeasType Defs::TEMPERATURE;
const Defs_MeasType Defs::HUMIDITY;
const Defs_MeasType Defs::TEMPERATURE_AND_HUMIDITY;
const Defs_MeasType Defs::MeasType_MIN;
const Defs_MeasType Defs::MeasType_MAX;
const int Defs::MeasType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Defs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Defs::Defs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_Defs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Defs)
}
Defs::Defs(const Defs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Defs)
}

void Defs::SharedCtor() {
}

Defs::~Defs() {
  // @@protoc_insertion_point(destructor:Defs)
  SharedDtor();
}

void Defs::SharedDtor() {
}

void Defs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Defs::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Defs& Defs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_Defs.base);
  return *internal_default_instance();
}


void Defs::Clear() {
// @@protoc_insertion_point(message_clear_start:Defs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Defs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Defs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Defs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Defs)
  return false;
#undef DO_
}

void Defs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Defs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Defs)
}

::google::protobuf::uint8* Defs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Defs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Defs)
  return target;
}

size_t Defs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Defs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Defs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Defs)
  GOOGLE_DCHECK_NE(&from, this);
  const Defs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Defs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Defs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Defs)
    MergeFrom(*source);
  }
}

void Defs::MergeFrom(const Defs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Defs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Defs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Defs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Defs::CopyFrom(const Defs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Defs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Defs::IsInitialized() const {
  return true;
}

void Defs::Swap(Defs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Defs::InternalSwap(Defs* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Defs::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CSensorInitReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSensorInitReq::kNameFieldNumber;
const int CSensorInitReq::kPowerFieldNumber;
const int CSensorInitReq::kMeasTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSensorInitReq::CSensorInitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_2eproto::scc_info_CSensorInitReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSensorInitReq)
}
CSensorInitReq::CSensorInitReq(const CSensorInitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&power_, &from.power_,
    static_cast<size_t>(reinterpret_cast<char*>(&meastype_) -
    reinterpret_cast<char*>(&power_)) + sizeof(meastype_));
  // @@protoc_insertion_point(copy_constructor:CSensorInitReq)
}

void CSensorInitReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meastype_) -
      reinterpret_cast<char*>(&power_)) + sizeof(meastype_));
}

CSensorInitReq::~CSensorInitReq() {
  // @@protoc_insertion_point(destructor:CSensorInitReq)
  SharedDtor();
}

void CSensorInitReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CSensorInitReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CSensorInitReq::descriptor() {
  ::protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CSensorInitReq& CSensorInitReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_2eproto::scc_info_CSensorInitReq.base);
  return *internal_default_instance();
}


void CSensorInitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CSensorInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meastype_) -
      reinterpret_cast<char*>(&power_)) + sizeof(meastype_));
  _internal_metadata_.Clear();
}

bool CSensorInitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSensorInitReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CSensorInitReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Defs.PowerState power = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_power(static_cast< ::Defs_PowerState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Defs.MeasType measType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_meastype(static_cast< ::Defs_MeasType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSensorInitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSensorInitReq)
  return false;
#undef DO_
}

void CSensorInitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSensorInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CSensorInitReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .Defs.PowerState power = 2;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->power(), output);
  }

  // .Defs.MeasType measType = 3;
  if (this->meastype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->meastype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CSensorInitReq)
}

::google::protobuf::uint8* CSensorInitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSensorInitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CSensorInitReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .Defs.PowerState power = 2;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->power(), target);
  }

  // .Defs.MeasType measType = 3;
  if (this->meastype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->meastype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSensorInitReq)
  return target;
}

size_t CSensorInitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSensorInitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Defs.PowerState power = 2;
  if (this->power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->power());
  }

  // .Defs.MeasType measType = 3;
  if (this->meastype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->meastype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSensorInitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSensorInitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CSensorInitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSensorInitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSensorInitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSensorInitReq)
    MergeFrom(*source);
  }
}

void CSensorInitReq::MergeFrom(const CSensorInitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSensorInitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
  if (from.meastype() != 0) {
    set_meastype(from.meastype());
  }
}

void CSensorInitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSensorInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSensorInitReq::CopyFrom(const CSensorInitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSensorInitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSensorInitReq::IsInitialized() const {
  return true;
}

void CSensorInitReq::Swap(CSensorInitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSensorInitReq::InternalSwap(CSensorInitReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(power_, other->power_);
  swap(meastype_, other->meastype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CSensorInitReq::GetMetadata() const {
  protobuf_msg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Defs* Arena::CreateMaybeMessage< ::Defs >(Arena* arena) {
  return Arena::CreateInternal< ::Defs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CSensorInitReq* Arena::CreateMaybeMessage< ::CSensorInitReq >(Arena* arena) {
  return Arena::CreateInternal< ::CSensorInitReq >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
